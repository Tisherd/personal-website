services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        - APP_USER=${APP_USER}
    container_name: "${APP_NAME}_php"
    restart: always
    working_dir: /var/www
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./:/var/www
      - ./docker/php/ini:/usr/local/etc/php/conf.d
    depends_on:
      - database
      - redis_cache
    networks:
      - app-network

  web_server:
    image: nginx:1.27.3-alpine
    container_name: "${APP_NAME}_nginx"
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - app-network

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    container_name: "${APP_NAME}_node"
    restart: always
    ports:
    - "3000:3000"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    networks:
      - app-network

  database:
    image: postgres:17
    container_name: "${APP_NAME}_postgres"
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init_scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_TEST_DB=${DB_TEST_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - APP_ENV=${APP_ENV}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 60s
      retries: 5
      timeout: 5s
    networks:
      - app-network

  redis_cache:
    image: redis:7.4.1
    container_name: "${APP_NAME}_redis"
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      retries: 5
      timeout: 3s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
